#!/bin/bash

function show-help(){
	echo "Usage: txt2png <filename> <width> <height> [page]"
}

if [ -z "$1" ];then
	echo "Error: filename is empty."
	show-help
	exit
fi

if [ -z "$2" ];then
	echo "Error: width is empty."
	show-help
	exit
fi

if [ -z "$3" ];then
	echo "Error: height is empty."
	show-help
	exit
fi

if [ -z "$4" ];then
	echo "page=1"
	page=1
else
	echo "page=$4"
	page="$4"	
fi

from=$(( ($page - 1) * $2*$3 + 1))
echo $from

# convert text hex file to rgb24 binary.
grep -v vsync $1 | tail -n +$from | head -n $(($2*$3))| xxd -r -ps > /tmp/a.raw

#size=`wc -c /tmp/a.raw | cut -d ' ' -f 1`
#if [ $(($2*$3*3)) != $size ];then
#	echo "Error:  $2x$3 image size is usually $(($2*$3*3)) bytes ($2 * $3 * 3 byte)."
#	echo "Error:  But your text file has $size bytes."
#	echo "Error:  so maybe you select invalid size or your txt file is invalid."
#	exit
#fi

# convert rgb24 binary to png.
ffmpeg -y -loglevel error -vcodec rawvideo -f rawvideo -pix_fmt rgb24 -s $2x$3 -i /tmp/a.raw -f image2 -vcodec png $1.png

#
# RGB24 is 24bit depth format.
#     0x00ffff -> R=0x00,G=0xff,B=0xff
# and ffmpeg has rgb24 encoder & decoder.
#
